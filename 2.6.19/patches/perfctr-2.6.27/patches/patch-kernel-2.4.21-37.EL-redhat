--- linux-2.4.21-37.EL.perfctr/CREDITS.~1~	2005-09-29 20:34:28.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/CREDITS	2005-09-29 22:52:22.000000000 +0200
@@ -2386,6 +2386,7 @@ N: Mikael Pettersson
 E: mikpe@csd.uu.se
 W: http://www.csd.uu.se/~mikpe/
 D: Miscellaneous fixes
+D: Performance-monitoring counters driver
 
 N: Reed H. Petty
 E: rhp@draper.net
--- linux-2.4.21-37.EL.perfctr/Documentation/Configure.help.~1~	2005-09-29 20:34:52.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/Documentation/Configure.help	2005-09-29 22:52:22.000000000 +0200
@@ -4560,6 +4560,65 @@ CONFIG_PDC_NARROW
 
   If unsure, say N.
 
+Performance-monitoring counters support
+CONFIG_PERFCTR
+  This driver provides access to the performance-monitoring counter
+  registers available in some (but not all) modern processors.
+  These special-purpose registers can be programmed to count low-level
+  performance-related events which occur during program execution,
+  such as cache misses, pipeline stalls, etc.
+
+  You can safely say Y here, even if you intend to run the kernel
+  on a processor without performance-monitoring counters.
+
+  You can also say M here to compile the driver as a module; the
+  module will be called `perfctr.o'.
+
+Additional internal consistency checks
+CONFIG_PERFCTR_DEBUG
+  This option enables additional internal consistency checking in
+  the perfctr driver. The scope of these checks is unspecified and
+  may vary between different versions of the driver.
+
+  Enabling this option will reduce performance, so say N unless you
+  are debugging the driver.
+
+Init-time hardware tests
+CONFIG_PERFCTR_INIT_TESTS
+  This option makes the driver perform additional hardware tests
+  during initialisation, and log their results in the kernel's
+  message buffer. For most supported processors, these tests simply
+  measure the runtime overheads of performance counter operations.
+
+  If you have a less well-known processor (one not listed in the
+  etc/costs/ directory in the user-space package), you should enable
+  this option and email the results to the perfctr developers.
+
+  If unsure, say N.
+
+Virtual performance counters support
+CONFIG_PERFCTR_VIRTUAL
+  The processor's performance-monitoring counters are special-purpose
+  global registers. This option adds support for virtual per-process
+  performance-monitoring counters which only run when the process
+  to which they belong is executing. This improves the accuracy of
+  performance measurements by reducing "noise" from other processes.
+
+  Say Y.
+
+Global performance counters support
+CONFIG_PERFCTR_GLOBAL
+  This option adds driver support for global-mode (system-wide)
+  performance-monitoring counters. In this mode, the driver allows
+  each performance-monitoring counter on each processor to be
+  controlled and read. The driver provides a sampling timer to
+  maintain 64-bit accumulated event counts.
+
+  Global-mode performance counters cannot be used if some process
+  is currently using virtual-mode performance counters, and vice versa.
+
+  Say Y.
+
 VGA text console
 CONFIG_VGA_CONSOLE
   Saying Y here will allow you to use Linux in text mode through a
--- linux-2.4.21-37.EL.perfctr/Documentation/ioctl-number.txt.~1~	2001-07-12 01:35:37.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/Documentation/ioctl-number.txt	2005-09-29 22:52:22.000000000 +0200
@@ -187,5 +187,7 @@ Code	Seq#	Include File		Comments
 0xB1	00-1F	PPPoX			<mailto:mostrows@styx.uwaterloo.ca>
 0xCB	00-1F	CBM serial IEC bus	in development:
 					<mailto:michael.klein@puffin.lb.shuttle.de>
+0xD0	all	performance counters	in development:
+					<mailto:mikpe@csd.uu.se>
 
 0xFE	00-9F	Logical Volume Manager	<mailto:linux-lvm@sistina.com>
--- linux-2.4.21-37.EL.perfctr/MAINTAINERS.~1~	2005-09-29 20:34:49.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/MAINTAINERS	2005-09-29 22:52:22.000000000 +0200
@@ -1340,6 +1340,12 @@ M:	tsbogend@alpha.franken.de
 L:	linux-net@vger.kernel.org
 S:	Maintained
 
+PERFORMANCE-MONITORING COUNTERS DRIVER
+P:	Mikael Pettersson
+M:	mikpe@csd.uu.se
+W:	http://www.csd.uu.se/~mikpe/linux/perfctr/
+S:	Maintained
+
 PERMEDIA 3 FRAMEBUFFER DRIVER
 P:	Romain Dolbeau
 M:	dolbeau@irisa.fr
--- linux-2.4.21-37.EL.perfctr/Makefile.~1~	2005-09-29 20:56:29.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/Makefile	2005-09-29 22:52:22.000000000 +0200
@@ -208,6 +208,7 @@ DRIVERS-$(CONFIG_ISDN_BOOL) += drivers/i
 DRIVERS-$(CONFIG_CRYPTO) += crypto/crypto.o
 
 DRIVERS-$(CONFIG_SENSORS) += drivers/sensors/sensor.o
+DRIVERS-$(CONFIG_KPERFCTR) += drivers/perfctr/kperfctr.o
 DRIVERS := $(DRIVERS-y)
 
 
--- linux-2.4.21-37.EL.perfctr/arch/i386/config.in.~1~	2005-09-29 20:34:55.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/i386/config.in	2005-09-29 22:52:22.000000000 +0200
@@ -309,6 +309,9 @@ fi
 if [ "$CONFIG_SMP" = "y" -a "$CONFIG_X86_CMPXCHG" = "y" ]; then
    define_bool CONFIG_HAVE_DEC_LOCK y
 fi
+
+source drivers/perfctr/Config.in
+
 endmenu
 
 mainmenu_option next_comment
--- linux-2.4.21-37.EL.perfctr/arch/i386/kernel/i8259.c.~1~	2001-09-18 08:03:09.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/i386/kernel/i8259.c	2005-09-29 22:52:22.000000000 +0200
@@ -21,6 +21,7 @@
 #include <asm/delay.h>
 #include <asm/desc.h>
 #include <asm/apic.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -95,6 +96,9 @@ BUILD_SMP_INTERRUPT(call_function_interr
 BUILD_SMP_TIMER_INTERRUPT(apic_timer_interrupt,LOCAL_TIMER_VECTOR)
 BUILD_SMP_INTERRUPT(error_interrupt,ERROR_APIC_VECTOR)
 BUILD_SMP_INTERRUPT(spurious_interrupt,SPURIOUS_APIC_VECTOR)
+#ifdef CONFIG_KPERFCTR
+BUILD_SMP_TIMER_INTERRUPT(perfctr_interrupt,LOCAL_PERFCTR_VECTOR)
+#endif
 #endif
 
 #define IRQ(x,y) \
@@ -489,6 +493,8 @@ void __init init_IRQ(void)
 	set_intr_gate(ERROR_APIC_VECTOR, error_interrupt);
 #endif
 
+	perfctr_vector_init();
+
 	/*
 	 * Set the clock to HZ Hz, we already have a valid
 	 * vector now:
--- linux-2.4.21-37.EL.perfctr/arch/i386/kernel/nmi.c.~1~	2005-09-29 20:34:44.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/i386/kernel/nmi.c	2005-09-29 22:52:22.000000000 +0200
@@ -27,7 +27,7 @@
 
 unsigned int nmi_watchdog = NMI_NONE;
 static unsigned int nmi_hz = HZ;
-static unsigned int nmi_perfctr_msr; /* the MSR to reset in NMI handler */
+unsigned int nmi_perfctr_msr; /* the MSR to reset in NMI handler */
 static long nmi_perfctr_val; /* the counter value to write into the MSR */
 extern void show_registers(struct pt_regs *regs);
 
--- linux-2.4.21-37.EL.perfctr/arch/i386/kernel/process.c.~1~	2005-09-29 20:34:44.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/i386/kernel/process.c	2005-09-29 22:52:22.000000000 +0200
@@ -33,6 +33,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/mc146818rtc.h>
 #include <linux/mman.h>
 #include <linux/random.h>
@@ -530,7 +531,7 @@ int arch_kernel_thread(int (*fn)(void *)
  */
 void exit_thread(void)
 {
-	/* nothing to do ... */
+	perfctr_exit_thread(&current->thread);
 }
 
 void flush_thread(void)
@@ -596,6 +597,8 @@ int copy_thread(int nr, unsigned long cl
 	savesegment(fs,p->thread.fs);
 	savesegment(gs,p->thread.gs);
 
+	perfctr_copy_task(p, regs);
+
 	tsk = current;
 	unlazy_fpu(tsk);
 	struct_cpy(&p->thread.i387, &tsk->thread.i387);
@@ -805,6 +808,9 @@ struct task_struct *  __switch_to(struct
 			 */
 			tss->bitmap = INVALID_IO_BITMAP_OFFSET;
 	}
+
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.4.21-37.EL.perfctr/arch/ppc/config.in.~1~	2005-09-29 20:34:53.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/ppc/config.in	2005-09-29 22:52:22.000000000 +0200
@@ -141,6 +141,9 @@ fi
 if [ "$CONFIG_8xx" = "y" -o "$CONFIG_8260" = "y" ]; then
     define_bool CONFIG_EMBEDDEDBOOT y
 fi
+
+source drivers/perfctr/Config.in
+
 endmenu
 
 mainmenu_option next_comment
--- linux-2.4.21-37.EL.perfctr/arch/ppc/kernel/head.S.~1~	2003-06-13 16:51:31.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/ppc/kernel/head.S	2005-09-29 22:52:22.000000000 +0200
@@ -492,20 +492,24 @@ SystemCall:
  */
 	. = 0xf00
 	b	Trap_0f
-trap_0f_cont:
+
+	. = 0xf20
+	b	AltiVecUnavailable
+
+Trap_0f:
+	EXCEPTION_PROLOG
 	addi	r3,r1,STACK_FRAME_OVERHEAD
 	li	r20,MSR_KERNEL
+#ifdef CONFIG_PERFCTR_INTERRUPT_SUPPORT
+	rlwimi  r20,r23,0,16,16         /* copy EE bit from saved MSR */
+	bl	transfer_to_handler
+	.long	do_perfctr_interrupt
+	.long	ret_from_except
+#else
 	bl	transfer_to_handler
 	.long	UnknownException
 	.long	ret_from_except
-
-	. = 0xf20
-#ifdef CONFIG_ALTIVEC
-	b	AltiVecUnavailable
 #endif
-Trap_0f:
-	EXCEPTION_PROLOG
-	b	trap_0f_cont
 
 /*
  * Handle TLB miss for instruction on 603/603e.
@@ -747,6 +751,14 @@ AltiVecUnavailable:
 	bl	transfer_to_handler	/* if from kernel, take a trap */
 	.long	KernelAltiVec
 	.long	ret_from_except
+#else
+AltiVecUnavailable:
+	EXCEPTION_PROLOG
+	addi	r3,r1,STACK_FRAME_OVERHEAD
+	li	r20,MSR_KERNEL
+	bl	transfer_to_handler
+	.long	UnknownException
+	.long	ret_from_except
 #endif /* CONFIG_ALTIVEC */
 
 #ifdef CONFIG_PPC64BRIDGE
--- linux-2.4.21-37.EL.perfctr/arch/ppc/kernel/process.c.~1~	2003-06-13 16:51:31.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/ppc/kernel/process.c	2005-09-29 22:52:22.000000000 +0200
@@ -32,6 +32,7 @@
 #include <linux/elf.h>
 #include <linux/init.h>
 #include <linux/prctl.h>
+#include <linux/perfctr.h>
 
 #include <asm/pgtable.h>
 #include <asm/uaccess.h>
@@ -235,7 +236,9 @@ _switch_to(struct task_struct *prev, str
 		new->thread.regs->msr |= MSR_VEC;
 	new_thread = &new->thread;
 	old_thread = &current->thread;
+	perfctr_suspend_thread(&prev->thread);
 	*last = _switch(old_thread, new_thread);
+	perfctr_resume_thread(&current->thread);
 	__restore_flags(s);
 }
 
@@ -298,6 +301,7 @@ void exit_thread(void)
 		last_task_used_math = NULL;
 	if (last_task_used_altivec == current)
 		last_task_used_altivec = NULL;
+	perfctr_exit_thread(&current->thread);
 }
 
 void flush_thread(void)
@@ -380,6 +384,8 @@ copy_thread(int nr, unsigned long clone_
 
 	p->thread.last_syscall = -1;
 
+	perfctr_copy_task(p, regs);
+
 	return 0;
 }
 
--- linux-2.4.21-37.EL.perfctr/arch/x86_64/config.in.~1~	2005-09-29 20:34:53.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/x86_64/config.in	2005-09-29 22:52:22.000000000 +0200
@@ -90,6 +90,8 @@ if [ "$CONFIG_K8_NUMA" = "y" ]; then
    define_bool CONFIG_NUMA y
 fi
 
+source drivers/perfctr/Config.in
+
 endmenu
 
 mainmenu_option next_comment
--- linux-2.4.21-37.EL.perfctr/arch/x86_64/kernel/entry.S.~1~	2005-09-29 20:34:53.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/x86_64/kernel/entry.S	2005-09-29 22:52:22.000000000 +0200
@@ -419,6 +419,9 @@ ENTRY(\x)
 	BUILD_SMP_INTERRUPT spurious_interrupt,SPURIOUS_APIC_VECTOR
 #endif
 		
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+	BUILD_SMP_INTERRUPT perfctr_interrupt,LOCAL_PERFCTR_VECTOR
+#endif
 		
 /*
  * Exception entry points.
--- linux-2.4.21-37.EL.perfctr/arch/x86_64/kernel/i8259.c.~1~	2003-06-13 16:51:32.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/x86_64/kernel/i8259.c	2005-09-29 22:52:22.000000000 +0200
@@ -23,6 +23,7 @@
 #include <asm/delay.h>
 #include <asm/desc.h>
 #include <asm/apic.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -438,6 +439,8 @@ void __init init_IRQ(void)
 	set_intr_gate(ERROR_APIC_VECTOR, error_interrupt);
 #endif
 
+	perfctr_vector_init();
+
 #ifndef CONFIG_VISWS
 	setup_irq(2, &irq2);
 #endif
--- linux-2.4.21-37.EL.perfctr/arch/x86_64/kernel/process.c.~1~	2005-09-29 20:34:44.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/arch/x86_64/kernel/process.c	2005-09-29 22:52:22.000000000 +0200
@@ -40,6 +40,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/ctype.h>
 #include <linux/slab.h>
 
@@ -391,6 +392,7 @@ void exit_thread(void)
 		kfree(me->thread.io_bitmap_ptr); 
 		me->thread.io_bitmap_ptr = NULL; 		
 	} 
+	perfctr_exit_thread(&me->thread);
 }
 
 void flush_thread(void)
@@ -571,6 +573,8 @@ int copy_thread(int nr, unsigned long cl
 	asm("movl %%es,%0" : "=m" (p->thread.es));
 	asm("movl %%ds,%0" : "=m" (p->thread.ds));
 
+	perfctr_copy_task(p, regs);
+
 	unlazy_fpu(current);	
 	p->thread.i387 = current->thread.i387;
 
@@ -747,6 +751,7 @@ struct task_struct *__switch_to(struct t
 		}
 	}
 
+	perfctr_resume_thread(next);
 
 	return prev_p;
 }
--- linux-2.4.21-37.EL.perfctr/drivers/Makefile.~1~	2005-09-29 20:34:53.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/drivers/Makefile	2005-09-29 22:52:22.000000000 +0200
@@ -55,4 +55,7 @@ subdir-$(CONFIG_ACPI)		+= acpi
 
 subdir-$(CONFIG_BLUEZ)		+= bluetooth
 
+mod-subdirs += perfctr
+subdir-$(CONFIG_KPERFCTR)	+= perfctr
+
 include $(TOPDIR)/Rules.make
--- linux-2.4.21-37.EL.perfctr/include/asm-i386/apic.h.~1~	2005-09-29 20:35:52.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/include/asm-i386/apic.h	2005-09-29 22:52:22.000000000 +0200
@@ -94,6 +94,9 @@ extern unsigned int nmi_watchdog;
 #define NMI_LOCAL_APIC	2
 #define NMI_INVALID	3
 
+extern struct pm_dev *nmi_pmdev;
+extern unsigned int nmi_perfctr_msr;
+
 #endif /* CONFIG_X86_LOCAL_APIC */
 
 extern int phys_proc_id[NR_CPUS];
--- linux-2.4.21-37.EL.perfctr/include/asm-i386/hw_irq.h.~1~	2005-09-29 20:35:52.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/include/asm-i386/hw_irq.h	2005-09-29 22:52:22.000000000 +0200
@@ -52,14 +52,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 extern int irq_vector[NR_IRQS];
 #define IO_APIC_VECTOR(irq)	irq_vector[irq]
--- linux-2.4.21-37.EL.perfctr/include/asm-i386/processor.h.~1~	2005-09-29 20:35:52.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/include/asm-i386/processor.h	2005-09-29 22:52:22.000000000 +0200
@@ -409,6 +409,8 @@ struct thread_struct {
 /* IO permissions */
 	int		ioperm;
 	unsigned long	io_bitmap[IO_BITMAP_SIZE+1];
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {						\
--- linux-2.4.21-37.EL.perfctr/include/asm-i386/system.h.~1~	2005-09-29 20:35:52.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/include/asm-i386/system.h	2005-09-29 22:52:22.000000000 +0200
@@ -14,6 +14,7 @@ extern struct task_struct * FASTCALL(__s
 
 #define switch_to(prev,next,last) do {					\
 	unsigned long esi,edi;						\
+	perfctr_suspend_thread(&(prev)->thread);			\
 	asm volatile("pushl %%ebp\n\t"					\
 		     "movl %%esp,%0\n\t"	/* save ESP */		\
 		     "movl %5,%%esp\n\t"	/* restore ESP */	\
--- linux-2.4.21-37.EL.perfctr/include/asm-ppc/processor.h.~1~	2003-06-13 16:51:38.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/include/asm-ppc/processor.h	2005-09-29 22:52:22.000000000 +0200
@@ -668,6 +668,9 @@ struct thread_struct {
 	vector128	vscr;		/* AltiVec status */
 	unsigned long	vrsave;
 #endif /* CONFIG_ALTIVEC */
+#ifdef CONFIG_PERFCTR_VIRTUAL
+	struct vperfctr	*perfctr;	/* performance counters */
+#endif
 };
 
 #define INIT_SP		(sizeof(init_stack) + (unsigned long) &init_stack)
--- linux-2.4.21-37.EL.perfctr/include/asm-x86_64/apic.h.~1~	2005-09-29 20:34:32.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/include/asm-x86_64/apic.h	2005-09-29 22:52:22.000000000 +0200
@@ -96,6 +96,9 @@ extern unsigned int nmi_watchdog;
 #define NMI_LOCAL_APIC	2
 #define NMI_INVALID	3
 
+extern struct pm_dev *nmi_pmdev;
+extern unsigned int nmi_perfctr_msr;
+
 #endif /* CONFIG_X86_LOCAL_APIC */
 
 #define esr_disable 0
--- linux-2.4.21-37.EL.perfctr/include/asm-x86_64/hw_irq.h.~1~	2005-09-29 20:34:31.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/include/asm-x86_64/hw_irq.h	2005-09-29 22:52:22.000000000 +0200
@@ -60,14 +60,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #ifndef __ASSEMBLY__
 extern int irq_vector[NR_IRQS];
--- linux-2.4.21-37.EL.perfctr/include/asm-x86_64/processor.h.~1~	2005-09-29 20:34:55.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/include/asm-x86_64/processor.h	2005-09-29 22:52:22.000000000 +0200
@@ -350,6 +350,8 @@ struct thread_struct {
 /* floating point info */
 	union i387_union	i387;
 	u32	*io_bitmap_ptr;
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {						\
--- linux-2.4.21-37.EL.perfctr/include/asm-x86_64/system.h.~1~	2005-09-29 20:34:31.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/include/asm-x86_64/system.h	2005-09-29 22:52:22.000000000 +0200
@@ -55,7 +55,8 @@ struct save_context_frame { 
 /* RED-PEN: the register saving could be optimized */
 /* frame pointer must be last for get_wchan */
 
-#define switch_to(prev,next,last) \
+#define switch_to(prev,next,last) do { \
+	perfctr_suspend_thread(&(prev)->thread); \
 	asm volatile(SAVE_CONTEXT					    \
 		     "movq %%rsp,%[prevrsp]\n\t"			    \
 		     "movq %[nextrsp],%%rsp\n\t"			    \
@@ -71,7 +72,8 @@ struct save_context_frame { 
 		     :[nextrsp] "m" (next->thread.rsp), 		    \
 		      [nextrip] "m" (next->thread.rip),			    \
 		      [next] "S" (next), [prev] "D" (prev)  		    \
-	             :"memory")
+	             :"memory"); \
+} while (0)
     
 		     
 extern void load_gs_index(unsigned); 
--- linux-2.4.21-37.EL.perfctr/include/linux/config.h.~1~	2005-09-29 20:35:52.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/include/linux/config.h	2005-09-29 22:52:57.000000000 +0200
@@ -3,4 +3,9 @@
 
 #include <linux/autoconf.h>
 
+/* describe relevant differences from the base kernel */
+#define HAVE_5ARG_REMAP_PAGE_RANGE 1
+#define HAVE_NOARG_RECALC_SIGPENDING 1
+#define HAVE_EXPORT___put_task_struct 1
+
 #endif
--- linux-2.4.21-37.EL.perfctr/kernel/exit.c.~1~	2005-09-29 20:34:53.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/kernel/exit.c	2005-09-29 22:52:22.000000000 +0200
@@ -21,6 +21,7 @@
 #include <linux/ptrace.h>
 #include <linux/mount.h>
 #include <linux/process_timing.h>
+#include <linux/perfctr.h>
 #include <asm/uaccess.h>
 #include <asm/pgtable.h>
 #include <linux/profile.h>
@@ -96,6 +97,7 @@ void release_task(struct task_struct * p
 	p->parent->cmin_flt += p->min_flt + p->cmin_flt;
 	p->parent->cmaj_flt += p->maj_flt + p->cmaj_flt;
 	p->parent->cnswap += p->nswap + p->cnswap;
+	perfctr_release_task(p);
 	sched_exit(p);
 	write_unlock_irq(&tasklist_lock);
 
--- linux-2.4.21-37.EL.perfctr/kernel/sched.c.~1~	2005-09-29 20:34:49.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/kernel/sched.c	2005-09-29 22:52:22.000000000 +0200
@@ -31,6 +31,7 @@
 #include <linux/blkdev.h>
 #include <linux/delay.h>
 #include <linux/timer.h>
+#include <linux/perfctr.h>
 
 
 #define cpu_to_node_mask(cpu) (cpu_online_map)
@@ -2415,6 +2416,8 @@ void set_cpus_allowed(task_t *p, unsigne
 		BUG();
 #endif
 
+	perfctr_set_cpus_allowed(p, new_mask);
+
 	rq = task_rq_lock(p, &flags);
 	p->cpus_allowed = new_mask;
 	/*
--- linux-2.4.21-37.EL.perfctr/kernel/timer.c.~1~	2005-09-29 20:34:49.000000000 +0200
+++ linux-2.4.21-37.EL.perfctr/kernel/timer.c	2005-09-29 22:52:22.000000000 +0200
@@ -28,6 +28,7 @@
 #include <linux/interrupt.h>
 #include <linux/kernel_stat.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 
@@ -986,6 +987,7 @@ static void update_process_times_statist
  */
 void update_process_times(int user_mode)
 {
+	perfctr_sample_thread(&current->thread);
 	if (process_timing.flags == 0)
 		/* No process accounting is enabled, use straight statistical
 		 * accounting */
